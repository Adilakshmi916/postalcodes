#spring.datasource.url= jdbc:mysql://localhost:3306/ecommerce?useSSL=false
#spring.datasource.username=root
#spring.datasource.password=Laxmi@1421
#
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
##none,create-only,drop,create=drop,validate,update
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true


#none- option disables the hbm2ddl.auto tool,so hibernate is not going to take any action for managing the underlying database schema.
#create only -option tells hibernate to genarate the database schema from the entity model.
#drop -this option tells hibernate to drop the database schema using the entity model as a reference for the DDL drop statements.
#create -option tells hibernate to drop the database schema and recreate it afterward using the entity model as a reference.
#create-drop-tells hibernate to drop the database schema and recreate it afterward usinf the entity model as a reference.
#validate-tells hibernate to validate against the entity mappings
#update-tells hibernate that alter the database tables per entity mapping changes

server.port = 8080

spring.datasource.url=jdbc:mysql://localhost:3306/ecommerce?useSSL-false
spring.datasource.username=root
spring.datasource.password=Laxmi@1421
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
//hibernet property will take database automatically//
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

